//! Generated by capsule
//!
//! `main.rs` is used to define rust lang items and modules.
//! See `entry.rs` for the `main` function.
//! See `error.rs` for the `Error` type.

#![no_std]
#![no_main]
#![feature(asm_sym)]
#![feature(lang_items)]
#![feature(alloc_error_handler)]
#![feature(panic_info_message)]

mod error;

use ckb_std::cstr_core::CStr;
use ckb_std::{ckb_constants::Source, default_alloc, syscalls::exec};
use core::arch::asm;

ckb_std::entry!(program_entry);
default_alloc!();

/// program entry
///
///  Both `argc` and `argv` can be omitted.
fn program_entry(_argc: u64, _argv: *const *const u8) -> i8 {
    let r = exec(
        0,
        Source::CellDep,
        0,
        0,
        &[&CStr::from_bytes_with_nul(b"42\0").unwrap()],
    );
    if r != 0 {
        return 10;
    }
    return 0;
}
